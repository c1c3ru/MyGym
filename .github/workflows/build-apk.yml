name: Build APK

on:
  push:
    branches: [main, develop]
    tags:
      - 'v*'
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Tipo de build'
        required: true
        default: 'preview'
        type: choice
        options:
          - preview
          - production-apk
          - development

jobs:
  build-android:
    name: Build Android APK
    runs-on: ubuntu-latest
    
    steps:
      - name: 🏗 Setup repo
        uses: actions/checkout@v4

      - name: 🏗 Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm

      - name: 🏗 Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: 🏗 Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔧 Setup environment variables
        env:
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
        run: |
          echo "EXPO_PUBLIC_FIREBASE_API_KEY=$FIREBASE_API_KEY" >> .env
          echo "EXPO_PUBLIC_FIREBASE_AUTH_DOMAIN=$FIREBASE_AUTH_DOMAIN" >> .env
          echo "EXPO_PUBLIC_FIREBASE_PROJECT_ID=$FIREBASE_PROJECT_ID" >> .env
          echo "EXPO_PUBLIC_FIREBASE_STORAGE_BUCKET=$FIREBASE_STORAGE_BUCKET" >> .env
          echo "EXPO_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=$FIREBASE_MESSAGING_SENDER_ID" >> .env
          echo "EXPO_PUBLIC_FIREBASE_APP_ID=$FIREBASE_APP_ID" >> .env

      - name: 🚀 Build APK
        run: |
          BUILD_TYPE="${{ github.event.inputs.build_type || 'preview' }}"
          echo "Building with profile: $BUILD_TYPE"
          eas build --platform android --profile $BUILD_TYPE --non-interactive --no-wait

      - name: 📱 Get build info
        id: build-info
        run: |
          # Aguardar um pouco para o build ser processado
          sleep 30
          
          # Obter informações do último build
          BUILD_INFO=$(eas build:list --platform android --limit 1 --json --non-interactive)
          BUILD_URL=$(echo $BUILD_INFO | jq -r '.[0].artifacts.buildUrl // empty')
          BUILD_ID=$(echo $BUILD_INFO | jq -r '.[0].id // empty')
          BUILD_STATUS=$(echo $BUILD_INFO | jq -r '.[0].status // empty')
          
          echo "build-url=$BUILD_URL" >> $GITHUB_OUTPUT
          echo "build-id=$BUILD_ID" >> $GITHUB_OUTPUT
          echo "build-status=$BUILD_STATUS" >> $GITHUB_OUTPUT

      - name: 💬 Comment PR with build info
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const buildUrl = '${{ steps.build-info.outputs.build-url }}';
            const buildId = '${{ steps.build-info.outputs.build-id }}';
            const buildStatus = '${{ steps.build-info.outputs.build-status }}';
            
            const comment = `
            ## 📱 Build Android APK
            
            **Build ID:** \`${buildId}\`
            **Status:** ${buildStatus}
            
            ${buildUrl ? `**Download:** [APK](${buildUrl})` : '**Build em andamento...** Verifique o status em: https://expo.dev/accounts/c1c3ru/projects/academia-app/builds'}
            
            ---
            *Build iniciado automaticamente para este PR*
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

      - name: 📋 Create release notes
        if: startsWith(github.ref, 'refs/tags/')
        id: release-notes
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          echo "tag-name=$TAG_NAME" >> $GITHUB_OUTPUT
          
          # Criar notas de release simples
          cat > release-notes.md << EOF
          ## 🚀 MyGym App $TAG_NAME
          
          ### 📱 Downloads
          - Android APK: Disponível após conclusão do build
          
          ### 🔄 Alterações
          $(git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 HEAD^)..HEAD)
          
          ### 📋 Informações do Build
          - **Commit:** \`${GITHUB_SHA:0:7}\`
          - **Data:** $(date -u +"%Y-%m-%d %H:%M:%S UTC")
          - **Branch:** ${GITHUB_REF_NAME}
          EOF

      - name: 🏷 Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          body_path: release-notes.md
          draft: false
          prerelease: ${{ contains(github.ref, 'beta') || contains(github.ref, 'alpha') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify-build-status:
    name: Notify Build Status
    runs-on: ubuntu-latest
    needs: build-android
    if: always()
    
    steps:
      - name: 📢 Notify Success
        if: needs.build-android.result == 'success'
        run: |
          echo "✅ Build APK concluído com sucesso!"
          echo "Verifique o Expo Dashboard para download: https://expo.dev/accounts/c1c3ru/projects/academia-app/builds"

      - name: 📢 Notify Failure
        if: needs.build-android.result == 'failure'
        run: |
          echo "❌ Build APK falhou!"
          echo "Verifique os logs acima para detalhes do erro."
          exit 1
