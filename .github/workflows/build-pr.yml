name: Build PR Preview

on:
  pull_request:
    branches: [main, develop]
    types: [opened, synchronize, reopened]

jobs:
  build-preview:
    name: Build Preview APK
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    
    steps:
      - name: üèó Setup repo
        uses: actions/checkout@v4

      - name: üèó Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm

      - name: üèó Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: üèó Setup EAS CLI
        run: |
          npm install -g @expo/cli@latest eas-cli@latest
          echo "EAS CLI installed successfully"
        
      - name: üîë Authenticate EAS
        run: |
          echo "Checking EAS authentication..."
          eas whoami
          echo "EAS authentication successful"
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: üì¶ Install dependencies
        run: |
          echo "Installing project dependencies..."
          npm ci
          echo "Dependencies installed successfully"

      - name: üîß Configure EAS project
        run: |
          echo "Checking EAS project configuration..."
          if [ ! -f "eas.json" ]; then
            echo "eas.json not found, configuring project..."
            eas build:configure --platform android --non-interactive
          else
            echo "eas.json found, project already configured"
          fi
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: üîß Setup environment variables
        env:
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
        run: |
          echo "EXPO_PUBLIC_FIREBASE_API_KEY=$FIREBASE_API_KEY" >> .env
          echo "EXPO_PUBLIC_FIREBASE_AUTH_DOMAIN=$FIREBASE_AUTH_DOMAIN" >> .env
          echo "EXPO_PUBLIC_FIREBASE_PROJECT_ID=$FIREBASE_PROJECT_ID" >> .env
          echo "EXPO_PUBLIC_FIREBASE_STORAGE_BUCKET=$FIREBASE_STORAGE_BUCKET" >> .env
          echo "EXPO_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=$FIREBASE_MESSAGING_SENDER_ID" >> .env
          echo "EXPO_PUBLIC_FIREBASE_APP_ID=$FIREBASE_APP_ID" >> .env

      - name: ‚úÖ Run tests
        run: npm run test:ci

      - name: üîç Type check
        run: npm run type-check

      - name: üé® Lint check
        run: npm run lint

      - name: üöÄ Build Preview APK
        run: eas build --platform android --profile preview --non-interactive --message "PR #${{ github.event.number }}: ${{ github.event.pull_request.title }}"

      - name: üì± Get build info
        id: build-info
        run: |
          # Aguardar processamento inicial
          sleep 30
          
          BUILD_INFO=$(eas build:list --platform android --limit 1 --json --non-interactive)
          BUILD_ID=$(echo $BUILD_INFO | jq -r '.[0].id')
          BUILD_STATUS=$(echo $BUILD_INFO | jq -r '.[0].status')
          
          echo "build-id=$BUILD_ID" >> $GITHUB_OUTPUT
          echo "build-status=$BUILD_STATUS" >> $GITHUB_OUTPUT
          
          echo "Build ID: $BUILD_ID"
          echo "Status inicial: $BUILD_STATUS"

      - name: üí¨ Comment PR with build info
        uses: actions/github-script@v7
        with:
          script: |
            const buildId = '${{ steps.build-info.outputs.build-id }}';
            const buildStatus = '${{ steps.build-info.outputs.build-status }}';
            const prNumber = context.issue.number;
            const commitSha = context.sha.substring(0, 7);
            
            const comment = `
            ## üì± Preview Build Android
            
            **PR:** #${prNumber} - ${{ github.event.pull_request.title }}
            **Commit:** \`${commitSha}\`
            **Build ID:** \`${buildId}\`
            **Status:** ${buildStatus === 'in-queue' ? 'üü° Na fila' : buildStatus === 'in-progress' ? 'üîÑ Em andamento' : buildStatus}
            
            ### üìã Verifica√ß√µes
            - ‚úÖ Testes passaram
            - ‚úÖ Type check passou  
            - ‚úÖ Lint passou
            - üöÄ Build iniciado
            
            ### üì• Download
            ${buildStatus === 'finished' ? 
              '**APK pronto!** Verifique o link de download no [Expo Dashboard](https://expo.dev/accounts/c1c3ru/projects/academia-app/builds)' : 
              '**Build em andamento...** Acompanhe o progresso no [Expo Dashboard](https://expo.dev/accounts/c1c3ru/projects/academia-app/builds/' + buildId + ')'
            }
            
            ---
            *Build autom√°tico para preview do PR*
            `;
            
            // Verificar se j√° existe um coment√°rio de build
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber
            });
            
            const existingComment = comments.find(comment => 
              comment.user.login === 'github-actions[bot]' && 
              comment.body.includes('## üì± Preview Build Android')
            );
            
            if (existingComment) {
              // Atualizar coment√°rio existente
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: comment
              });
            } else {
              // Criar novo coment√°rio
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: comment
              });
            }

  build-status-check:
    name: Build Status Check
    runs-on: ubuntu-latest
    needs: build-preview
    if: always()
    
    steps:
      - name: ‚úÖ Build Success
        if: needs.build-preview.result == 'success'
        run: |
          echo "‚úÖ Preview build iniciado com sucesso!"
          echo "üîó Acompanhe em: https://expo.dev/accounts/c1c3ru/projects/academia-app/builds"

      - name: ‚ùå Build Failed
        if: needs.build-preview.result == 'failure'
        run: |
          echo "‚ùå Preview build falhou!"
          echo "Verifique os logs acima para detalhes."
          exit 1

      - name: ‚ö†Ô∏è Build Skipped
        if: needs.build-preview.result == 'skipped'
        run: |
          echo "‚ö†Ô∏è Preview build foi pulado (PR draft ou outras condi√ß√µes)"
