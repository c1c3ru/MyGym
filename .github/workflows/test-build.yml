name: Test Build

on:
  workflow_dispatch:

jobs:
  test-build:
    name: Test EAS Setup
    runs-on: ubuntu-latest
    
    steps:
      - name: 🏗 Setup repo
        uses: actions/checkout@v4

      - name: 🏗 Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.4'
          cache: npm

      - name: 🏗 Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: 🏗 Setup EAS CLI
        run: |
          echo "Installing EAS CLI..."
          npm install -g @expo/cli@latest eas-cli@latest
          echo "EAS CLI installed successfully"
          
          echo "Checking versions..."
          npx @expo/cli --version
          eas --version

      - name: 🔑 Debug Secrets
        run: |
          echo "=== DEBUG SECRETS ==="
          echo "Available secrets (should not show values):"
          env | grep -E "^[A-Z_]+=" | grep -v "EXPO_TOKEN" || echo "No environment variables found"
          echo "EXPO_TOKEN is set: ${{ secrets.EXPO_TOKEN != '' }}"
          echo "EXPO_TOKEN length: ${#EXPO_TOKEN}"
          echo "====================="
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
          
      - name: 🔑 Authenticate EAS
        run: |
          echo "Checking EAS authentication..."
          
          if [ -z "$EXPO_TOKEN" ]; then
            echo "❌ EXPO_TOKEN is empty or not set"
            echo "Secret value from GitHub: '${{ secrets.EXPO_TOKEN }}'"
            echo "Please verify the secret is configured correctly"
            exit 1
          fi
          
          echo "✅ Token found (length: ${#EXPO_TOKEN})"
          echo "Testing EAS authentication..."
          eas whoami
          echo "✅ EAS authentication successful"
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: 📦 Install dependencies
        run: |
          echo "Installing project dependencies..."
          npm ci
          echo "Dependencies installed successfully"

      - name: 🔧 Setup environment variables
        env:
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
        run: |
          echo "Setting up environment variables..."
          echo "EXPO_PUBLIC_FIREBASE_API_KEY=$FIREBASE_API_KEY" >> .env
          echo "EXPO_PUBLIC_FIREBASE_AUTH_DOMAIN=$FIREBASE_AUTH_DOMAIN" >> .env
          echo "EXPO_PUBLIC_FIREBASE_PROJECT_ID=$FIREBASE_PROJECT_ID" >> .env
          echo "EXPO_PUBLIC_FIREBASE_STORAGE_BUCKET=$FIREBASE_STORAGE_BUCKET" >> .env
          echo "EXPO_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=$FIREBASE_MESSAGING_SENDER_ID" >> .env
          echo "EXPO_PUBLIC_FIREBASE_APP_ID=$FIREBASE_APP_ID" >> .env
          echo "Environment variables configured"

      - name: 🔧 Check EAS project
        run: |
          echo "Checking EAS project configuration..."
          
          if [ -f "eas.json" ]; then
            echo "✅ eas.json found"
            cat eas.json
          else
            echo "❌ eas.json not found"
            exit 1
          fi
          
          if [ -f "app.json" ]; then
            echo "✅ app.json found"
            echo "Project info:"
            cat app.json | jq '.expo.name, .expo.slug, .expo.owner'
          else
            echo "❌ app.json not found"
            exit 1
          fi
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: 🚀 Test EAS build command
        run: |
          echo "Testing EAS build command (dry run)..."
          eas build --platform android --profile preview --non-interactive --dry-run
          echo "✅ EAS build command test successful"
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: 📋 Summary
        run: |
          echo "🎉 All tests passed!"
          echo "✅ EAS CLI installed and working"
          echo "✅ Authentication successful"
          echo "✅ Dependencies installed"
          echo "✅ Environment variables configured"
          echo "✅ Project configuration valid"
          echo "✅ Build command ready"
          echo ""
          echo "Ready for actual build! 🚀"
